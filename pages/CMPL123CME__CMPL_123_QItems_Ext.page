<apex:page StandardController="CMPL123CME__Questionnaire__c" extensions="CMPL123CME.CMPL_123_QItems_Ext" showheader="false" sidebar="false" id="pg" >
    <apex:includeScript value="{!URLFOR($Resource.CMPL123__Compliance123, '/jquery-ui-1.12.1/js/jquery-3.4.0.min.js')}"/>

    <style>
        .popupBackground {background-color:black;opacity: 0.20;filter: alpha(opacity = 20);position: absolute;width: 100%;height: 100%;top: 0;left: 0;z-index: 9998;}
        .custPopup {width: 480px;height:auto;left:25%;top:20px;background-color:white;border-width: 2px;border-style:solid;z-index: 9999;align:center;padding:10px;position: absolute;}
        .btn{color: #333;border: 1px solid #b5b5b5;border-bottom-color: #7f7f7f;background: #e8e8e9 url('/img/alohaSkin/btn_sprite.png') repeat-x right top;font-weight: bold;font-size: .9em;border-radius: 3px;}
        .questionnaire-item-audit-link {
            text-decoration:underline;
            float:right;
            margin-right:2%;
        }
    </style>

    <script type="text/javascript">
        var __sfdcSessionId = '{!JSENCODE(GETSESSIONID())}';
    </script>

    <apex:includeScript value="/soap/ajax/26.0/connection.js"/>
    <apex:includeScript value="/support/console/46.0/integration.js"/>
    <!-- JS to handle lightning navigation-->
    <apex:includeScript value="{!URLFOR($Resource.CMPL123__Compliance123, '/js/lexUtil.js')}"/>

    <script>
        //Variables to store record and page Ids
        var recordId = "{!JSENCODE(CMPL123CME__Questionnaire__c.id)}";
        var pageId = "{!JSENCODE(currentPageId)}";
        var relatedId;

        function switchMenu(obj,obj1,obj2){
            var el = document.getElementById(obj);
            if ( el.style.display != 'none' ) {
                el.style.display = 'none';
            }else{
                el.style.display = '';
            }
            var e2 = document.getElementById(obj1);
            if ( e2.style.display != 'none' ) {
                e2.style.display = 'none';
            }else{
                e2.style.display = '';
            }
            var e3 = document.getElementById(obj2);
            if ( e2.style.display != 'none' ){
                e3.style.display = 'none';
            }else{
                e3.style.display = '';
            }
        }
        relatedId = "{!JSENCODE($CurrentPage.parameters.id)}";

        function checkQt(elementObj) {
            if (disableButton(elementObj)) {
                var qtsArr = [];
                $("input[type='checkbox']:checked").each(function() {
                    if ($(this).attr("class") != 'headerChkBox') {
                        qtsArr.push($(this).attr("class").split('-')[1]);
                    }
                });

                if (qtsArr.length > 0) {
                    Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.CMPL_123_QItems_Ext.setQts}',qtsArr,relatedId,function(result, event){
                        if (event.status && event.result === 'Success') {
                            //Fix supports for Lightning and Classic Console app.
                            if(lexUtil.isConsoleTheme()){
                                lexUtil.refreshFocusedParentTab();
                            }
                            //conditions to navigate based on user experience
                            lexUtil.navigateByUserTheme(recordId, pageId);
                        } else{
                            alert(event.message);
                            setSaveButtonAsActive(elementObj, true);
                        }

                    }, {escape:true});
                } else {
                    $('#oneQt').css("display", "block");

                    // Enable save button so user is not blocked from adding questions
                    setSaveButtonAsActive(elementObj, true);
                }
            }
        }

        function doCancel(){
            document.getElementById("pg:fm:qtPopup").style.display='none';
        }

        function checkAll(cb,cbid){
            var inputElem = document.getElementsByTagName("input");
            for(var i=0; i<inputElem.length; i++){
                if(inputElem[i].id.indexOf(cbid) != -1){
                    inputElem[i].checked = cb.checked;
                }
            }
        }

        function unCheckHeader(){
            $('.headerChkBox').removeAttr("checked");
        }

        function unChkHeader(val){
            if (val.checked == false){
                $(".headerChkBox").removeAttr("checked");
            }else{
                var flag = 0;
                $("input[type='checkbox']").each(function(){
                    if($(this).attr("class") != 'headerChkBox'){
                        if(this.checked == false){
                            flag = 1;
                        }
                    }
                });
                if(flag == 0)
                    $(".headerChkBox").prop("checked", true);
            }
        }

        function loadPage(elementObj) {
            if ($(".errorMsg").length == 0
                && (document.getElementById("{!$Component.pg.fm.pb.showErrMsg}") == null
                    || (document.getElementById("{!$Component.pg.fm.pb.showErrMsg}") != null
                        && document.getElementById("{!$Component.pg.fm.pb.showErrMsg}").children.length == 0))) {
                //Fix supports for Lightning and Classic Console app.
                if(lexUtil.isConsoleTheme()){
                    lexUtil.refreshFocusedParentTab();
                }
                //conditions to navigate based on user experience
                lexUtil.navigateByUserTheme(recordId, pageId);
            } else {
                // Enable save button so user is not blocked
                setSaveButtonAsActive(elementObj, true);
            }
        }

        function getAnsVal(elememtVal,idval,itemId,order){
            $('[class^='+itemId+']').css('visibility','visible');
            getRelatedQItems(elememtVal.value,itemId,order);
        }

        function hideRowHeader(ele){
            var assesVal = ele.className.split(',')[0];
            var qitId = ele.className.split(',')[1];
            var assesValNew = assesVal.replace("'","").toLowerCase();
            var elememtValNew = ele.value.replace("'","").toLowerCase();
            var assecSplit = assesValNew.split(",");

            if(assesValNew.indexOf('all') > -1 && elememtValNew != ''){
                var classval = "."+"comments"+qitId;
                var elem = $(classval);
                elem.attr('style', 'width:200px;border-color:red;');
            }else{
                for (i = 0; i < assecSplit.length; i++) {
                    if(assecSplit[i] == elememtValNew){
                        var classval = "."+"comments"+qitId;
                        var elem = $(classval);
                        elem.attr('style', 'width:200px;border-color:red;');
                        break;
                    }else{
                        var className = "comments"+qitId;
                        var isRequired = 'false';
                        var classval = "."+"comments"+qitId;
                        var elem = $(classval);
                        elem.attr('style', 'width:200px;');
                    }
                }
            }
        }

        function getRelatedQItems(elememtVal,itemId,order){
            setQIMap(elememtVal,itemId,order);
        }

        function disableButton(elementObj) {
            if (confirm('{!JSENCODE($Label.cmpl123cme__cmplt_are_you_sure)}')) {
                setSaveButtonAsActive(elementObj, false);
                return true;
            } else {
                return false;
            }
        }

        function setSaveButtonAsActive(elementObj, isEnabled) {
            if (elementObj !== undefined && isEnabled !== undefined) {
                elementObj.disabled = !isEnabled;

                if (!isEnabled) {
                    elementObj.value = '{!JSENCODE($Label.cmpl123cme__cmplt_saving)}';
                    elementObj.classList.add("btnDisabled");
                } else {
                    elementObj.value = '{!JSENCODE($Label.cmpl123cme__cmplt_save)}';
                    elementObj.classList.remove("btnDisabled");
                }
            }
        }
    </script>
    <apex:outputLink styleClass="questionnaire-item-audit-link" value="/apex/CMPL123__AuditTrail?qid={!CMPL123CME__Questionnaire__c.Id}" id="theLink" target="_blank">{!$Label.cmpl123cme__cmplt_questionnaire_audit_trail}</apex:outputLink>
    <apex:form id="fm">
        <apex:pageBlock title="{! $Label.CMPL123CME__cmplt_hello } {! $User.FirstName }! {! $Label.CMPL123CME__cmplt_assessment_items_below }"
                        mode="edit"  id="pb">

            <!-- Error messages -->
            <apex:outputPanel id="err">
                <apex:pageMessages id="showErrMsg" rendered="{! hasErrorMsg }"/>
            </apex:outputPanel>

            <!-- Message for when there are no items to show -->
            <apex:outputPanel rendered="{! and(displayEmptyAssessmentMsg, assessmentIsEmpty) }">
                <apex:outputText style="color:red;margin-left:10px;" value="{! $Label.CMPL123CME__cmplt_no_questions_found }"/>
            </apex:outputPanel>

            <!-- Form buttons for adding questions and saving answers -->
            <apex:pageBlockButtons >
                <apex:commandButton value="{! $Label.CMPL123CME__cmplt_save }" action="{! saveChanges }"
                                    rendered="{! and(showSave, !assessmentIsEmpty) }"
                                    rerender="showErrMsg,err"
                                    onclick="if(!disableButton(this)) return false;" oncomplete="loadPage(this);"/>

                <apex:commandButton value="{! $Label.CMPL123CME__cmplt_add_questions }" action="{! openAddQuestionPopup }"
                                    rendered="{! and(!hasErrorMsg, $Setup.CMPL123__CMPL_App_Config__c.CMPL123CME__Show_Add_Question_Button__c) }"
                                    reRender="fm"/>
            </apex:pageBlockButtons>

            <!-- Table of sections -->
            <apex:pageBlockTable value="{! assessmentQuestionsBySection }" var="key"
                                 rendered="{! !assessmentIsEmpty }">
                <apex:column >

                    <!-- Buttons for expanding/collapsing sections -->
                    <apex:outputpanel id="plusimage" style="display:none;">
                        <apex:image url="/img/alohaSkin/setup/setup_plus_lev1.gif"
                                    title="{! $Label.CMPL123CME__cmplt_expand } - {! key } {! $Label.CMPL123CME__cmplt_questions }"
                                    onclick="switchMenu('{! $Component.inlinetablesec }','{! $Component.minusimage }','{! $Component.plusimage }')" />
                    </apex:outputpanel>
                    <apex:outputpanel id="minusimage" >
                        <apex:image url="/img/alohaSkin/setup/setup_minus_lev1.gif"
                                    title="{! $Label.CMPL123CME__cmplt_collapse } - {! key } {! $Label.CMPL123CME__cmplt_questions }"
                                    onclick="switchMenu('{! $Component.inlinetablesec }','{! $Component.plusimage }','{! $Component.minusimage }')" />
                    </apex:outputpanel>

                    <!-- Section name -->
                    {! key }

                    <!-- Table of questions -->
                    <apex:outputpanel id="inlinetablesec">
                        <apex:pageBlockTable value="{! assessmentQuestionsBySection[key] }" var="tsk" >

                            <apex:column headerValue="{! $Label.CMPL123CME__cmplt_question_no }"  width="8%"  >
                                <apex:outputField value="{! tsk.Question_No__c }"/>
                            </apex:column>

                            <apex:column headerValue="{! $Label.CMPL123CME__cmplt_question }"  width="35%" >
                                <apex:outputField value="{! tsk.Question__c }"/>
                            </apex:column>

                            <apex:column headerValue="{! $Label.CMPL123CME__cmplt_answer }" width="15%" >
                                <apex:inputField value="{! tsk.Answer__c }"
                                                 onchange="getAnsVal(this,'{! tsk.Id }','{! tsk.Questions_Template_Item__c }','{! tsk.Decision_Level__c }')"
                                                 styleClass="{! tsk.Assessment_Comment_Required_Options__c },{! tsk.Id }" />
                                <apex:image id="theImage" value="/img/loading.gif" width="22" height="20" style="visibility: hidden;"
                                            styleClass="{! tsk.Questions_Template_Item__c }"/>
                            </apex:column>

                            <apex:column headerValue="{! $Label.CMPL123CME__cmplt_comment }" width="30%" >
                                <div id="reqdiv{! tsk.Id }" style="color: red;">
                                    <apex:inputField value="{! tsk.Comments__c }" style="width:200px;" id="reqcomments"
                                                     styleClass="comments{! tsk.Questions_Template_Item__c }"/>

                                    <!-- Conditionally highlight comment box if required based on answers -->
                                    <script>
                                        var answerVal = "{!JSENCODE(tsk.Answer__c)}".replace("'","").toLowerCase();
                                        
                                        if ("{!JSENCODE(tsk.Assessment_Comment_Required_Options__c)}".toLowerCase().indexOf("all") > -1 && answerVal !== "") {
                                            var classval = "."+"comments"+'{!JSENCODE(tsk.Questions_Template_Item__c)}';
                                            var ele = $(classval);
                                            ele.attr('style', 'width:200px;border-color:red;');
                                        } else {
                                            var assecSplit = "{!JSENCODE(tsk.Assessment_Comment_Required_Options__c)}".toLowerCase().replace("'","").split(',');
                                            for (i = 0; i < assecSplit.length; i++) {
                                                if (assecSplit[i] === answerVal && assecSplit[i].trim() !== "") {
                                                    var classval = "."+"comments"+'{!JSENCODE(tsk.Questions_Template_Item__c)}';
                                                    var ele = $(classval);
                                                    ele.attr('style', 'width:200px;border-color:red;');
                                                    break;
                                                } else {
                                                    var classval = "."+"comments"+'{!JSENCODE(tsk.Questions_Template_Item__c)}';
                                                    var ele = $(classval);
                                                    ele.attr('style', 'width:200px;');
                                                }
                                            }
                                        }
                                    </script>
                                </div>
                            </apex:column>

                            <apex:column headerValue="{!$Label.cmpl123cme__cmplt_score}"  width="12%" >
                                <apex:outputField value="{!tsk.Score__c}"/>
                            </apex:column>

                        </apex:pageBlockTable>
                    </apex:outputpanel>
                </apex:column>
            </apex:pageBlockTable>
        </apex:pageBlock>

        <!-- Poppup to add questions -->
        <apex:outputPanel id="qtPopup" rendered="{! displayPopup }">
            <apex:outputPanel styleClass="popupBackground" layout="block" id="popup"/>

            <apex:outputPanel styleClass="custPopup" layout="block" id="pop">
                <apex:pageBlock title="{! $Label.CMPL123CME__cmplt_add_questions }" >
                    <div>
                        <!-- Label for dropdown -->
                        {!HTMLENCODE($Label.CMPL123CME__CMPLT_QUESTIONNAIRE_NAME)}:&nbsp;&nbsp;

                        <!-- Dropdown -->
                        <apex:selectList value="{! selectedAssessmentTemplateName }" size="1" onchange="qtLst()" >
                            <apex:actionFunction name="qtLst" action="{! getAvailableQuestionsFromSelection }"
                                                 reRender="qtn,fm" oncomplete="unCheckHeader();"/>
                            <apex:selectOptions value="{! TemplateNames }"/>
                        </apex:selectList>
                        <br/><br/>
                    </div>

                    <!-- Message when attempting to save without selecting -->
                    <div id="oneQt" style="display:none;color:red;" >{!HTMLENCODE($Label.CMPL123CME__CMPLT_SELECT_ATLEAST_ONE_QUESTION)}</div>

                    <!-- Button when nothing is selected -->
                    <apex:outputPanel rendered="{! !showQuestionsTable }" >
                        <input type="button" value="{!HTMLENCODE($Label.CMPL123CME__CMPLT_CLOSE)}" onclick="doCancel();" style="margin-left:200px;" class="btn"/>
                    </apex:outputPanel>

                    <!-- Table of questions available from template to be added -->
                    <apex:outputPanel rendered="{! showQuestionsTable }" id="qtn">
                        <apex:pageBlock rendered="{! IF(availableAssessmentTemplateQuestions != null && availableAssessmentTemplateQuestions.size > 0,true,false) }">
                            <apex:pageBlockTable value="{! availableAssessmentTemplateQuestions }" var="qt" >

                                <apex:column >
                                    <apex:facet name="header">
                                        <apex:inputCheckbox onclick="checkAll(this,'chk');" styleClass="headerChkBox"/>
                                    </apex:facet>
                                    <apex:inputCheckbox id="chk" styleClass="chk-{! qt.Id }" onclick="unChkHeader(this);" />
                                </apex:column>

                                <apex:column value="{! qt.Question_Text__c }"/>
                                <apex:column value="{! qt.Weight__c }"/>

                            </apex:pageBlockTable>

                            <!-- Buttons for popup -->
                            <apex:pageBlockButtons location="bottom" >
                                <input type="button" value="{!HTMLENCODE($Label.CMPL123CME__cmplt_save)}" onclick="checkQt(this);" class="btn"/>
                                <input type="button" value="{!HTMLENCODE($Label.CMPL123CME__CMPLT_CANCEL)}" onclick="doCancel();" class="btn"/>
                            </apex:pageBlockButtons>
                        </apex:pageBlock>

                        <apex:pageBlock rendered="{! IF(availableAssessmentTemplateQuestions != null && availableAssessmentTemplateQuestions.size == 0,true,false) }">
                            <div style="text-align:center;">{!HTMLENCODE($Label.CMPL123CME__CMPLT_NO_QUESTIONS_FOUND_TO_ADD)}</div>
                            <br/>
                            <input type="button" value="{!HTMLENCODE($Label.CMPL123CME__CMPLT_CLOSE)}" onclick="doCancel();" style="margin-left:200px;" class="btn"/>
                        </apex:pageBlock>
                    </apex:outputPanel>
                </apex:pageBlock>
            </apex:outputPanel>
        </apex:outputPanel>

        <apex:actionFunction action="{! setAdditionalQuestions }" name="getRelatedQItems" reRender="pb" oncomplete="hideRowHeader(this)">
            <apex:param name="firstParam" assignTo="{! modifiedAnswer }" value="" />
            <apex:param name="secondParam" assignTo="{! modifiedQuestionId }" value="" />
            <apex:param name="fourthParam" assignTo="{! modifiedQuestionNumber }" value="" />
        </apex:actionFunction>
    </apex:form>
</apex:page>